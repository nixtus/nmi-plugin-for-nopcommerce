@{
    Layout = "";
}

@inject NmiPaymentSettings nmiPaymentSettings
@inject Nop.Core.Domain.Orders.OrderSettings orderSettings

@using Nixtus.Plugin.Payments.Nmi
@model Nixtus.Plugin.Payments.Nmi.Models.PaymentInfoModel

<style scoped>
    td.error {
        color: red;
    }
</style>

@if (!Model.IsGuest && Model.AllowCustomerToSaveCards && Model.StoredCards.Any())
{
    <table width="100%" cellspacing="2" cellpadding="1" border="0">
        <tr>
            <td>
                <label asp-for="StoredCardId">@T("Plugins.Payments.Nmi.Fields.StoredCard"):</label>
            </td>
            <td>
                <select asp-for="StoredCardId" asp-items="Model.StoredCards" class="nmi-input"></select>
            </td>
        </tr>
    </table>
}

<table width="100%" cellspacing="2" cellpadding="1" border="0" id="nmi-card-details">
    <tr>
        <td>
            @Html.LabelFor(model => model.CardNumber, false):
        </td>
        <td id="ccnumber"></td>
    </tr>
    <tr>
        <td></td>
        <td class="error" id="ccnumber-error"></td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(model => model.ExpireMonth, false):
        </td>
        <td id="ccexp"></td>
    </tr>
    <tr>
        <td></td>
        <td class="error" id="ccexp-error"></td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(model => model.CardCode, false):
        </td>
        <td id="cvv"></td>
    </tr>
    <tr>
        <td></td>
        <td class="error" id="cvv-error"></td>
    </tr>
    @if (!Model.IsGuest && Model.AllowCustomerToSaveCards)
    {
        <tr>
            <td>
                @Html.LabelFor(model => model.SaveCustomer, false):
            </td>
            <td>
                <input type="checkbox" asp-for="SaveCustomer" />
                <span asp-validation-for="SaveCustomer"></span>
            </td>
        </tr>
    }
</table>
<input type="hidden" name="Token" id="Token" asp-for="Token">

<script>
    var onePageCheckout = @orderSettings.OnePageCheckoutEnabled.ToString().ToLower();
	var formSubmitted = false;

    function addScript() {
        var s = document.createElement('script');
        s.setAttribute('src', 'https://secure.networkmerchants.com/token/Collect.js');
        s.setAttribute('data-tokenization-key', '@nmiPaymentSettings.CollectJsTokenizationKey');
        s.onload = () => {
            CollectJS.configure({
                variant: 'inline',
                callback: (response) => {
                    $('#@Html.IdFor(model => model.Token)').val(response.token);

                    if (onePageCheckout) {
                        PaymentInfo.save();
                    } else {
                        formSubmitted = true;
						$("input.payment-info-next-step-button").click();
                    }
                },
                validationCallback: (field, status, message) => {
                    if (!status) {
                        $("#" + field + "-error").html(message);
                    } else {
                        $("#" + field + "-error").html("");
                    }
                }
            });
        };
        document.body.appendChild(s);
    }

    $(document).ready(() => {
        $('#@Html.IdFor(model => model.StoredCardId)').change(toggleStoredCard);
        toggleStoredCard();

        //remove handler so we dont validate the form
        $('.payment-info-next-step-button').attr('onclick', null);

        addScript();

        $(".payment-info-next-step-button").on('click', (event) => {
            var selectedStoredCardId = $('#@Html.IdFor(model => model.StoredCardId)').val();
			if (formSubmitted || (selectedStoredCardId && selectedStoredCardId !== '0')) {
				// add form parameter so that the right action is hit
				var input = $("<input>").attr("type", "hidden").attr("name", "nextstep").val("Next");
				$("form[action='/checkout/paymentinfo']").append(input);
				$("form[action='/checkout/paymentinfo']").submit();
				return false;
			}

            CollectJS.startPaymentRequest(event);

            return false;
        });
    });

    function toggleStoredCard() {
        var selectedStoredCardId = $('#@Html.IdFor(model => model.StoredCardId)').val();
        if (!selectedStoredCardId || selectedStoredCardId == '0') {
            $('#nmi-card-details').show();
        } else {
            $('#nmi-card-details').hide();
        }
    }
</script>
